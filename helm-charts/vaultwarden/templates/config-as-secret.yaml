apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ include "vaultwarden.fullname" . }}
stringData:
{{- if .Values.sync.ready }}
  "auth.env": |
    export BW_CLIENTID="organization.{{ .Values.sync.target.org_id }}"
    export BW_CLIENTSECRET="{{ .Values.sync.target.org_secret }}"
    export BW_SERVER="https://{{ .Values.ingress.host }}"
{{- if eq .Values.sync.directory "ldap" }}
    export DIRECTORY=ldap
    export LDAP_ssl="{{ default "null" .Values.sync.ldap.ssl }}"
    export LDAP_startTls="{{ default "null" .Values.sync.ldap.startTls }}"
    export LDAP_sslAllowUnauthorized="{{ default "null" .Values.sync.ldap.sslAllowUnauthorized }}"
    export LDAP_port="{{ default "null" .Values.sync.ldap.port }}"
    export LDAP_currentUser="{{ default "null" .Values.sync.ldap.currentUser }}"
    export LDAP_ad="{{ default "null" .Values.sync.ldap.ad }}"
    export LDAP_pagedSearch="{{ default "null" .Values.sync.ldap.pagedSearch }}"
    export LDAP_username="{{ default "null" .Values.sync.ldap.username }}"
    export LDAP_password="{{ default "null" .Values.sync.ldap.password }}"
    export LDAP_hostname="{{ default "null" .Values.sync.ldap.hostname }}"
    export LDAP_rootPath="{{ default "null" .Values.sync.ldap.rootPath }}"
    export SYNC_users="{{ default (default "null" .Values.sync.defaults.users) .Values.sync.ldap.users }}"
    export SYNC_groups="{{ default (default "null" .Values.sync.defaults.groups) .Values.sync.ldap.groups }}"
    export SYNC_interval="{{ default (default "null" .Values.sync.defaults.interval) .Values.sync.ldap.interval }}"
    export SYNC_removeDisabled="{{ default (default "null" .Values.sync.defaults.removeDisabled) .Values.sync.ldap.removeDisabled }}"
    export SYNC_overwriteExisting="{{ default (default "null" .Values.sync.defaults.overwriteExisting) .Values.sync.ldap.overwriteExisting }}"
    export SYNC_largeImport="{{ default (default "null" .Values.sync.defaults.largeImport) .Values.sync.ldap.largeImport }}"
    export SYNC_useEmailPrefixSuffix="{{ default (default "null" .Values.sync.defaults.useEmailPrefixSuffix) .Values.sync.ldap.useEmailPrefixSuffix }}"
    export SYNC_creationDateAttribute="{{ default (default "null" .Values.sync.defaults.creationDateAttribute) .Values.sync.ldap.creationDateAttribute }}"
    export SYNC_revisionDateAttribute="{{ default (default "null" .Values.sync.defaults.revisionDateAttribute) .Values.sync.ldap.revisionDateAttribute }}"
    export SYNC_emailPrefixAttribute="{{ default (default "null" .Values.sync.defaults.emailPrefixAttribute) .Values.sync.ldap.emailPrefixAttribute }}"
    export SYNC_memberAttribute="{{ default (default "null" .Values.sync.defaults.memberAttribute) .Values.sync.ldap.memberAttribute }}"
    export SYNC_userObjectClass="{{ default (default "null" .Values.sync.defaults.userObjectClass) .Values.sync.ldap.userObjectClass }}"
    export SYNC_groupObjectClass="{{ default (default "null" .Values.sync.defaults.groupObjectClass) .Values.sync.ldap.groupObjectClass }}"
    export SYNC_userEmailAttribute="{{ default (default "null" .Values.sync.defaults.userEmailAttribute) .Values.sync.ldap.userEmailAttribute }}"
    export SYNC_groupNameAttribute="{{ default (default "null" .Values.sync.defaults.groupNameAttribute) .Values.sync.ldap.groupNameAttribute }}"
    export SYNC_groupPath="{{ default (default "null" .Values.sync.defaults.groupPath) .Values.sync.ldap.groupPath }}"
    export SYNC_userPath="{{ default (default "null" .Values.sync.defaults.userPath) .Values.sync.ldap.userPath }}"
    export SYNC_groupFilter="{{ default (default "null" .Values.sync.defaults.groupFilter) .Values.sync.ldap.groupFilter }}"
    export SYNC_userFilter="{{ default (default "null" .Values.sync.defaults.userFilter) .Values.sync.ldap.userFilter }}"
{{- end }}
{{- if eq .Values.sync.directory "okta" }}
    export DIRECTORY=okta
    export OKTA_orgUrl="{{ default "null" .Values.sync.okta.orgUrl }}"
    export OKTA_token="{{ default "null" .Values.sync.okta.token }}"
    export SYNC_users="{{ default (default "null" .Values.sync.defaults.users) .Values.sync.okta.users }}"
    export SYNC_groups="{{ default (default "null" .Values.sync.defaults.groups) .Values.sync.okta.groups }}"
    export SYNC_interval="{{ default (default "null" .Values.sync.defaults.interval) .Values.sync.okta.interval }}"
    export SYNC_removeDisabled="{{ default (default "null" .Values.sync.defaults.removeDisabled) .Values.sync.okta.removeDisabled }}"
    export SYNC_overwriteExisting="{{ default (default "null" .Values.sync.defaults.overwriteExisting) .Values.sync.okta.overwriteExisting }}"
    export SYNC_largeImport="{{ default (default "null" .Values.sync.defaults.largeImport) .Values.sync.okta.largeImport }}"
    export SYNC_groupFilter="{{ default (default "null" .Values.sync.defaults.groupFilter) .Values.sync.okta.groupFilter }}"
    export SYNC_userFilter="{{ default (default "null" .Values.sync.defaults.userFilter) .Values.sync.okta.userFilter }}"
{{- end }}
{{- if eq .Values.sync.directory "azure" }}
    export DIRECTORY=azure
    export AZURE_privateKey="{{ default "null" .Values.sync.azure.privateKey }}"
    export AZURE_identityAuthority="{{ default "null" .Values.sync.azure.identityAuthority }}"
    export AZURE_tenant="{{ default "null" .Values.sync.azure.tenant }}"
    export AZURE_applicationId="{{ default "null" .Values.sync.azure.applicationId }}"
    export SYNC_users="{{ default (default "null" .Values.sync.defaults.users) .Values.sync.azure.users }}"
    export SYNC_groups="{{ default (default "null" .Values.sync.defaults.groups) .Values.sync.azure.groups }}"
    export SYNC_interval="{{ default (default "null" .Values.sync.defaults.interval) .Values.sync.azure.interval }}"
    export SYNC_removeDisabled="{{ default (default "null" .Values.sync.defaults.removeDisabled) .Values.sync.azure.removeDisabled }}"
    export SYNC_overwriteExisting="{{ default (default "null" .Values.sync.defaults.overwriteExisting) .Values.sync.azure.overwriteExisting }}"
    export SYNC_largeImport="{{ default (default "null" .Values.sync.defaults.largeImport) .Values.sync.azure.largeImport }}"
    export SYNC_groupFilter="{{ default (default "null" .Values.sync.defaults.groupFilter) .Values.sync.azure.groupFilter }}"
    export SYNC_userFilter="{{ default (default "null" .Values.sync.defaults.userFilter) .Values.sync.azure.userFilter }}"
{{- end }}
{{- if eq .Values.sync.directory "gsuite" }}
    export DIRECTORY=gsuite
    export GSUITE_privateKey="{{ default "null" .Values.sync.gsuite.privateKey }}"
    export GSUITE_domain="{{ default "null" .Values.sync.gsuite.domain }}"
    export GSUITE_adminUser="{{ default "null" .Values.sync.gsuite.adminUser }}"
    export GSUITE_customer="{{ default "null" .Values.sync.gsuite.customer }}"
    export SYNC_users="{{ default (default "null" .Values.sync.defaults.users) .Values.sync.gsuite.users }}"
    export SYNC_groups="{{ default (default "null" .Values.sync.defaults.groups) .Values.sync.gsuite.groups }}"
    export SYNC_interval="{{ default (default "null" .Values.sync.defaults.interval) .Values.sync.gsuite.interval }}"
    export SYNC_removeDisabled="{{ default (default "null" .Values.sync.defaults.removeDisabled) .Values.sync.gsuite.removeDisabled }}"
    export SYNC_overwriteExisting="{{ default (default "null" .Values.sync.defaults.overwriteExisting) .Values.sync.gsuite.overwriteExisting }}"
    export SYNC_largeImport="{{ default (default "null" .Values.sync.defaults.largeImport) .Values.sync.gsuite.largeImport }}"
    export SYNC_groupFilter="{{ default (default "null" .Values.sync.defaults.groupFilter) .Values.sync.gsuite.groupFilter }}"
    export SYNC_userFilter="{{ default (default "null" .Values.sync.defaults.userFilter) .Values.sync.gsuite.userFilter }}"
{{- end }}
{{- if or (eq .Values.sync.directory "oneLogin") (eq .Values.sync.directory "onelogin") }}
    export DIRECTORY=oneLogin
    export ONELOGIN_region="{{ default "null" .Values.sync.onelogin.region }}"
    export ONELOGIN_clientSecret="{{ default "null" .Values.sync.onelogin.clientSecret }}"
    export ONELOGIN_clientId="{{ default "null" .Values.sync.onelogin.clientId }}"
    export SYNC_users="{{ default (default "null" .Values.sync.defaults.users) .Values.sync.onelogin.users }}"
    export SYNC_groups="{{ default (default "null" .Values.sync.defaults.groups) .Values.sync.onelogin.groups }}"
    export SYNC_interval="{{ default (default "null" .Values.sync.defaults.interval) .Values.sync.onelogin.interval }}"
    export SYNC_removeDisabled="{{ default (default "null" .Values.sync.defaults.removeDisabled) .Values.sync.onelogin.removeDisabled }}"
    export SYNC_overwriteExisting="{{ default (default "null" .Values.sync.defaults.overwriteExisting) .Values.sync.onelogin.overwriteExisting }}"
    export SYNC_largeImport="{{ default (default "null" .Values.sync.defaults.largeImport) .Values.sync.onelogin.largeImport }}"
    export SYNC_groupFilter="{{ default (default "null" .Values.sync.defaults.groupFilter) .Values.sync.onelogin.groupFilter }}"
    export SYNC_userFilter="{{ default (default "null" .Values.sync.defaults.userFilter) .Values.sync.onelogin.userFilter }}"
{{- end }}
{{- end }}
  ".env": |
    # SOURCE https://github.com/dani-garcia/vaultwarden/blob/6edceb5f7acfee8ffe1ae2f07afd76dc588dda60/.env.template
    # Taken 2025-03-06
    # shellcheck disable=SC2034,SC2148
    ## Vaultwarden Configuration File
    ## Uncomment any of the following lines to change the defaults
    ##
    ## Be aware that most of these settings will be overridden if they were changed
    ## in the admin interface. Those overrides are stored within DATA_FOLDER/config.json .
    ##
    ## By default, Vaultwarden expects for this file to be named ".env" and located
    ## in the current working directory. If this is not the case, the environment
    ## variable ENV_FILE can be set to the location of this file prior to starting
    ## Vaultwarden.

    ####################
    ### Data folders ###
    ####################

    ## Main data folder
    # DATA_FOLDER=data
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DATA_FOLDER") }}

    ## Individual folders, these override %DATA_FOLDER%
    # RSA_KEY_FILENAME=data/rsa_key
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "RSA_KEY_FILENAME") }}
    # ICON_CACHE_FOLDER=data/icon_cache
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_CACHE_FOLDER") }}
    # ATTACHMENTS_FOLDER=data/attachments
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ATTACHMENTS_FOLDER") }}
    # SENDS_FOLDER=data/sends
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SENDS_FOLDER") }}
    # TMP_FOLDER=data/tmp
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "TMP_FOLDER") }}

    ## Templates data folder, by default uses embedded templates
    ## Check source code to see the format
    # TEMPLATES_FOLDER=data/templates
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "TEMPLATES_FOLDER") }}
    ## Automatically reload the templates for every request, slow, use only for development
    # RELOAD_TEMPLATES=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "RELOAD_TEMPLATES") }}

    ## Web vault settings
    # WEB_VAULT_FOLDER=web-vault/
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "WEB_VAULT_FOLDER") }}
    # WEB_VAULT_ENABLED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "WEB_VAULT_ENABLED") }}

    #########################
    ### Database settings ###
    #########################

    ## Database URL
    ## When using SQLite, this is the path to the DB file, default to %DATA_FOLDER%/db.sqlite3
    # DATABASE_URL=data/db.sqlite3
    ## When using MySQL, specify an appropriate connection URI.
    ## Details: https://docs.diesel.rs/2.1.x/diesel/mysql/struct.MysqlConnection.html
    # DATABASE_URL=mysql://user:password@host[:port]/database_name
    ## When using PostgreSQL, specify an appropriate connection URI (recommended)
    ## or keyword/value connection string.
    ## Details:
    ## - https://docs.diesel.rs/2.1.x/diesel/pg/struct.PgConnection.html
    ## - https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
    # DATABASE_URL=postgresql://user:password@host[:port]/database_name
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "DATABASE_URL") }}

    ## Enable WAL for the DB
    ## Set to false to avoid enabling WAL during startup.
    ## Note that if the DB already has WAL enabled, you will also need to disable WAL in the DB,
    ## this setting only prevents Vaultwarden from automatically enabling it on start.
    ## Please read project wiki page about this setting first before changing the value as it can
    ## cause performance degradation or might render the service unable to start.
    # ENABLE_DB_WAL=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ENABLE_DB_WAL") }}

    ## Database connection retries
    ## Number of times to retry the database connection during startup, with 1 second delay between each retry, set to 0 to retry indefinitely
    # DB_CONNECTION_RETRIES=15
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DB_CONNECTION_RETRIES") }}

    ## Database timeout
    ## Timeout when acquiring database connection
    # DATABASE_TIMEOUT=30
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DATABASE_TIMEOUT") }}

    ## Database max connections
    ## Define the size of the connection pool used for connecting to the database.
    # DATABASE_MAX_CONNS=10
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DATABASE_MAX_CONNS") }}

    ## Database connection initialization
    ## Allows SQL statements to be run whenever a new database connection is created.
    ## This is mainly useful for connection-scoped pragmas.
    ## If empty, a database-specific default is used:
    ## - SQLite: "PRAGMA busy_timeout = 5000; PRAGMA synchronous = NORMAL;"
    ## - MySQL: ""
    ## - PostgreSQL: ""
    # DATABASE_CONN_INIT=""
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "DATABASE_CONN_INIT") }}

    #################
    ### WebSocket ###
    #################

    ## Enable websocket notifications
    # ENABLE_WEBSOCKET=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ENABLE_WEBSOCKET") }}

    ##########################
    ### Push notifications ###
    ##########################

    ## Enables push notifications (requires key and id from https://bitwarden.com/host)
    ## Details about mobile client push notification:
    ## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-Mobile-Client-push-notification
    # PUSH_ENABLED=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PUSH_ENABLED") }}
    # PUSH_INSTALLATION_ID=CHANGEME
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PUSH_INSTALLATION_ID") }}
    # PUSH_INSTALLATION_KEY=CHANGEME
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PUSH_INSTALLATION_KEY") }}

    # WARNING: Do not modify the following settings unless you fully understand their implications!
    # Default Push Relay and Identity URIs
    # PUSH_RELAY_URI=https://push.bitwarden.com
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PUSH_RELAY_URI") }}
    # PUSH_IDENTITY_URI=https://identity.bitwarden.com
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PUSH_IDENTITY_URI") }}
    # European Union Data Region Settings
    # If you have selected "European Union" as your data region, use the following URIs instead.
    # PUSH_RELAY_URI=https://api.bitwarden.eu
    # PUSH_IDENTITY_URI=https://identity.bitwarden.eu

    #####################
    ### Schedule jobs ###
    #####################

    ## Job scheduler settings
    ##
    ## Job schedules use a cron-like syntax (as parsed by https://crates.io/crates/cron),
    ## and are always in terms of UTC time (regardless of your local time zone settings).
    ##
    ## The schedule format is a bit different from crontab as crontab does not contains seconds.
    ## You can test the the format here: https://crontab.guru, but remove the first digit!
    ## SEC  MIN   HOUR   DAY OF MONTH    MONTH   DAY OF WEEK
    ## "0   30   9,12,15     1,15       May-Aug  Mon,Wed,Fri"
    ## "0   30     *          *            *          *     "
    ## "0   30     1          *            *          *     "
    ##
    ## How often (in ms) the job scheduler thread checks for jobs that need running.
    ## Set to 0 to globally disable scheduled jobs.
    # JOB_POLL_INTERVAL_MS=30000
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "JOB_POLL_INTERVAL_MS") }}
    ##
    ## Cron schedule of the job that checks for Sends past their deletion date.
    ## Defaults to hourly (5 minutes after the hour). Set blank to disable this job.
    # SEND_PURGE_SCHEDULE="0 5 * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SEND_PURGE_SCHEDULE") }}
    ##
    ## Cron schedule of the job that checks for trashed items to delete permanently.
    ## Defaults to daily (5 minutes after midnight). Set blank to disable this job.
    # TRASH_PURGE_SCHEDULE="0 5 0 * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "TRASH_PURGE_SCHEDULE") }}
    ##
    ## Cron schedule of the job that checks for incomplete 2FA logins.
    ## Defaults to once every minute. Set blank to disable this job.
    # INCOMPLETE_2FA_SCHEDULE="30 * * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "INCOMPLETE_2FA_SCHEDULE") }}
    ##
    ## Cron schedule of the job that sends expiration reminders to emergency access grantors.
    ## Defaults to hourly (3 minutes after the hour). Set blank to disable this job.
    # EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE="0 3 * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE") }}
    ##
    ## Cron schedule of the job that grants emergency access requests that have met the required wait time.
    ## Defaults to hourly (7 minutes after the hour). Set blank to disable this job.
    # EMERGENCY_REQUEST_TIMEOUT_SCHEDULE="0 7 * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "EMERGENCY_REQUEST_TIMEOUT_SCHEDULE") }}
    ##
    ## Cron schedule of the job that cleans old events from the event table.
    ## Defaults to daily. Set blank to disable this job. Also without EVENTS_DAYS_RETAIN set, this job will not start.
    # EVENT_CLEANUP_SCHEDULE="0 10 0 * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "EVENT_CLEANUP_SCHEDULE") }}
    ## Number of days to retain events stored in the database.
    ## If unset (the default), events are kept indefinitely and the scheduled job is disabled!
    # EVENTS_DAYS_RETAIN=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EVENTS_DAYS_RETAIN") }}
    ##
    ## Cron schedule of the job that cleans old auth requests from the auth request.
    ## Defaults to every minute. Set blank to disable this job.
    # AUTH_REQUEST_PURGE_SCHEDULE="30 * * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "AUTH_REQUEST_PURGE_SCHEDULE") }}
    ##
    ## Cron schedule of the job that cleans expired Duo contexts from the database. Does nothing if Duo MFA is disabled or set to use the legacy iframe prompt.
    ## Defaults to every minute. Set blank to disable this job.
    # DUO_CONTEXT_PURGE_SCHEDULE="30 * * * * *"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "DUO_CONTEXT_PURGE_SCHEDULE") }}

    ########################
    ### General settings ###
    ########################

    ## Domain settings
    ## The domain must match the address from where you access the server
    ## It's recommended to configure this value, otherwise certain functionality might not work,
    ## like attachment downloads, email links and U2F.
    ## For U2F to work, the server must use HTTPS, you can use Let's Encrypt for free certs
    ## To use HTTPS, the recommended way is to put Vaultwarden behind a reverse proxy
    ## Details:
    ## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS
    ## - https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples
    ## For development
    # DOMAIN=http://localhost
    ## For public server
    # DOMAIN=https://vw.domain.tld
    ## For public server (URL with port number)
    # DOMAIN=https://vw.domain.tld:8443
    ## For public server (URL with path)
    # DOMAIN=https://domain.tld/vw
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DOMAIN") }}

    ## Controls whether users are allowed to create Bitwarden Sends.
    ## This setting applies globally to all users.
    ## To control this on a per-org basis instead, use the "Disable Send" org policy.
    # SENDS_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SENDS_ALLOWED") }}

    ## HIBP Api Key
    ## HaveIBeenPwned API Key, request it here: https://haveibeenpwned.com/API/Key
    # HIBP_API_KEY=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "HIBP_API_KEY") }}

    ## Per-organization attachment storage limit (KB)
    ## Max kilobytes of attachment storage allowed per organization.
    ## When this limit is reached, organization members will not be allowed to upload further attachments for ciphers owned by that organization.
    # ORG_ATTACHMENT_LIMIT=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ORG_ATTACHMENT_LIMIT") }}
    ## Per-user attachment storage limit (KB)
    ## Max kilobytes of attachment storage allowed per user.
    ## When this limit is reached, the user will not be allowed to upload further attachments.
    # USER_ATTACHMENT_LIMIT=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "USER_ATTACHMENT_LIMIT") }}
    ## Per-user send storage limit (KB)
    ## Max kilobytes of send storage allowed per user.
    ## When this limit is reached, the user will not be allowed to upload further sends.
    # USER_SEND_LIMIT=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "USER_SEND_LIMIT") }}

    ## Number of days to wait before auto-deleting a trashed item.
    ## If unset (the default), trashed items are not auto-deleted.
    ## This setting applies globally, so make sure to inform all users of any changes to this setting.
    # TRASH_AUTO_DELETE_DAYS=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "TRASH_AUTO_DELETE_DAYS") }}

    ## Number of minutes to wait before a 2FA-enabled login is considered incomplete,
    ## resulting in an email notification. An incomplete 2FA login is one where the correct
    ## master password was provided but the required 2FA step was not completed, which
    ## potentially indicates a master password compromise. Set to 0 to disable this check.
    ## This setting applies globally to all users.
    # INCOMPLETE_2FA_TIME_LIMIT=3
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "INCOMPLETE_2FA_TIME_LIMIT") }}

    ## Disable icon downloading
    ## Set to true to disable icon downloading in the internal icon service.
    ## This still serves existing icons from $ICON_CACHE_FOLDER, without generating any external
    ## network requests. $ICON_CACHE_TTL must also be set to 0; otherwise, the existing icons
    ## will be deleted eventually, but won't be downloaded again.
    # DISABLE_ICON_DOWNLOAD=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DISABLE_ICON_DOWNLOAD") }}

    ## Controls if new users can register
    # SIGNUPS_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SIGNUPS_ALLOWED") }}

    ## Controls if new users need to verify their email address upon registration
    ## Note that setting this option to true prevents logins until the email address has been verified!
    ## The welcome email will include a verification link, and login attempts will periodically
    ## trigger another verification email to be sent.
    # SIGNUPS_VERIFY=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SIGNUPS_VERIFY") }}

    ## If SIGNUPS_VERIFY is set to true, this limits how many seconds after the last time
    ## an email verification link has been sent another verification email will be sent
    # SIGNUPS_VERIFY_RESEND_TIME=3600
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SIGNUPS_VERIFY_RESEND_TIME") }}

    ## If SIGNUPS_VERIFY is set to true, this limits how many times an email verification
    ## email will be re-sent upon an attempted login.
    # SIGNUPS_VERIFY_RESEND_LIMIT=6
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SIGNUPS_VERIFY_RESEND_LIMIT") }}

    ## Controls if new users from a list of comma-separated domains can register
    ## even if SIGNUPS_ALLOWED is set to false
    # SIGNUPS_DOMAINS_WHITELIST=example.com,example.net,example.org
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SIGNUPS_DOMAINS_WHITELIST") }}

    ## Controls whether event logging is enabled for organizations
    ## This setting applies to organizations.
    ## Disabled by default. Also check the EVENT_CLEANUP_SCHEDULE and EVENTS_DAYS_RETAIN settings.
    # ORG_EVENTS_ENABLED=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ORG_EVENTS_ENABLED") }}

    ## Controls which users can create new orgs.
    ## Blank or 'all' means all users can create orgs (this is the default):
    # ORG_CREATION_USERS=
    ## 'none' means no users can create orgs:
    # ORG_CREATION_USERS=none
    ## A comma-separated list means only those users can create orgs:
    # ORG_CREATION_USERS=admin1@example.com,admin2@example.com
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ORG_CREATION_USERS") }}

    ## Invitations org admins to invite users, even when signups are disabled
    # INVITATIONS_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "INVITATIONS_ALLOWED") }}
    ## Name shown in the invitation emails that don't come from a specific organization
    # INVITATION_ORG_NAME=Vaultwarden
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "INVITATION_ORG_NAME") }}

    ## The number of hours after which an organization invite token, emergency access invite token,
    ## email verification token and deletion request token will expire (must be at least 1)
    # INVITATION_EXPIRATION_HOURS=120
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "INVITATION_EXPIRATION_HOURS") }}

    ## Controls whether users can enable emergency access to their accounts.
    ## This setting applies globally to all users.
    # EMERGENCY_ACCESS_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMERGENCY_ACCESS_ALLOWED") }}

    ## Controls whether users can change their email.
    ## This setting applies globally to all users
    # EMAIL_CHANGE_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_CHANGE_ALLOWED") }}

    ## Number of server-side passwords hashing iterations for the password hash.
    ## The default for new users. If changed, it will be updated during login for existing users.
    # PASSWORD_ITERATIONS=600000
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PASSWORD_ITERATIONS") }}

    ## Controls whether users can set or show password hints. This setting applies globally to all users.
    # PASSWORD_HINTS_ALLOWED=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "PASSWORD_HINTS_ALLOWED") }}

    ## Controls whether a password hint should be shown directly in the web page if
    ## SMTP service is not configured and password hints are allowed.
    ## Not recommended for publicly-accessible instances because this provides
    ## unauthenticated access to potentially sensitive data.
    # SHOW_PASSWORD_HINT=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SHOW_PASSWORD_HINT") }}

    #########################
    ### Advanced settings ###
    #########################

    ## Client IP Header, used to identify the IP of the client, defaults to "X-Real-IP"
    ## Set to the string "none" (without quotes), to disable any headers and just use the remote IP
    # IP_HEADER=X-Real-IP
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "IP_HEADER") }}

    ## Icon service
    ## The predefined icon services are: internal, bitwarden, duckduckgo, google.
    ## To specify a custom icon service, set a URL template with exactly one instance of `{}`,
    ## which is replaced with the domain. For example: `https://icon.example.com/domain/{}`.
    ##
    ## `internal` refers to Vaultwarden's built-in icon fetching implementation.
    ## If an external service is set, an icon request to Vaultwarden will return an HTTP
    ## redirect to the corresponding icon at the external service. An external service may
    ## be useful if your Vaultwarden instance has no external network connectivity, or if
    ## you are concerned that someone may probe your instance to try to detect whether icons
    ## for certain sites have been cached.
    # ICON_SERVICE=internal
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_SERVICE") }}

    ## Icon redirect code
    ## The HTTP status code to use for redirects to an external icon service.
    ## The supported codes are 301 (legacy permanent), 302 (legacy temporary), 307 (temporary), and 308 (permanent).
    ## Temporary redirects are useful while testing different icon services, but once a service
    ## has been decided on, consider using permanent redirects for cacheability. The legacy codes
    ## are currently better supported by the Bitwarden clients.
    # ICON_REDIRECT_CODE=302
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_REDIRECT_CODE") }}

    ## Cache time-to-live for successfully obtained icons, in seconds (0 is "forever")
    ## Default: 2592000 (30 days)
    # ICON_CACHE_TTL=2592000
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_CACHE_TTL") }}
    ## Cache time-to-live for icons which weren't available, in seconds (0 is "forever")
    ## Default: 2592000 (3 days)
    # ICON_CACHE_NEGTTL=259200
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_CACHE_NEGTTL") }}

    ## Icon download timeout
    ## Configure the timeout value when downloading the favicons.
    ## The default is 10 seconds, but this could be to low on slower network connections
    # ICON_DOWNLOAD_TIMEOUT=10
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ICON_DOWNLOAD_TIMEOUT") }}

    ## Block HTTP domains/IPs by Regex
    ## Any domains or IPs that match this regex won't be fetched by the internal HTTP client.
    ## Useful to hide other servers in the local network. Check the WIKI for more details
    ## NOTE: Always enclose this regex withing single quotes!
    # HTTP_REQUEST_BLOCK_REGEX='^(192\.168\.0\.[0-9]+|192\.168\.1\.[0-9]+)$'
{{- include "checkAndPrintEnvVarSingleQuoted" (dict "Values" .Values "varName" "HTTP_REQUEST_BLOCK_REGEX") }}

    ## Enabling this will cause the internal HTTP client to refuse to connect to any non global IP address.
    ## Useful to secure your internal environment: See https://en.wikipedia.org/wiki/Reserved_IP_addresses for a list of IPs which it will block
    # HTTP_REQUEST_BLOCK_NON_GLOBAL_IPS=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "HTTP_REQUEST_BLOCK_NON_GLOBAL_IPS") }}

    ## Client Settings
    ## Enable experimental feature flags for clients.
    ## This is a comma-separated list of flags, e.g. "flag1,flag2,flag3".
    ##
    ## The following flags are available:
    ## - "autofill-overlay": Add an overlay menu to form fields for quick access to credentials.
    ## - "autofill-v2": Use the new autofill implementation.
    ## - "browser-fileless-import": Directly import credentials from other providers without a file.
    ## - "extension-refresh": Temporarily enable the new extension design until general availability (should be used with the beta Chrome extension)
    ## - "fido2-vault-credentials": Enable the use of FIDO2 security keys as second factor.
    ## - "inline-menu-positioning-improvements": Enable the use of inline menu password generator and identity suggestions in the browser extension.
    ## - "ssh-key-vault-item": Enable the creation and use of SSH key vault items. (Needs clients >=2024.12.0)
    ## - "ssh-agent": Enable SSH agent support on Desktop. (Needs desktop >=2024.12.0)
    # EXPERIMENTAL_CLIENT_FEATURE_FLAGS=fido2-vault-credentials
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EXPERIMENTAL_CLIENT_FEATURE_FLAGS") }}

    ## Require new device emails. When a user logs in an email is required to be sent.
    ## If sending the email fails the login attempt will fail!!
    # REQUIRE_DEVICE_EMAIL=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "REQUIRE_DEVICE_EMAIL") }}

    ## Enable extended logging, which shows timestamps and targets in the logs
    # EXTENDED_LOGGING=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EXTENDED_LOGGING") }}

    ## Timestamp format used in extended logging.
    ## Format specifiers: https://docs.rs/chrono/latest/chrono/format/strftime
    # LOG_TIMESTAMP_FORMAT="%Y-%m-%d %H:%M:%S.%3f"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "LOG_TIMESTAMP_FORMAT") }}

    ## Logging to Syslog
    ## This requires extended logging
    # USE_SYSLOG=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "USE_SYSLOG") }}

    ## Logging to file
    # LOG_FILE=/path/to/log
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "LOG_FILE") }}

    ## Log level
    ## Change the verbosity of the log output
    ## Valid values are "trace", "debug", "info", "warn", "error" and "off"
    ## Setting it to "trace" or "debug" would also show logs for mounted routes and static file, websocket and alive requests
    ## For a specific module append a comma separated `path::to::module=log_level`
    ## For example, to only see debug logs for icons use: LOG_LEVEL="info,vaultwarden::api::icons=debug"
    # LOG_LEVEL=info
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "LOG_LEVEL") }}

    ## Token for the admin interface, preferably an Argon2 PCH string
    ## Vaultwarden has a built-in generator by calling `vaultwarden hash`
    ## For details see: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page#secure-the-admin_token
    ## If not set, the admin panel is disabled
    ## New Argon2 PHC string
    ## Note that for some environments, like docker-compose you need to escape all the dollar signs `$` with an extra dollar sign like `$$`
    ## Also, use single quotes (') instead of double quotes (") to enclose the string when needed
    # ADMIN_TOKEN='$argon2id$v=19$m=65540,t=3,p=4$MmeKRnGK5RW5mJS7h3TOL89GrpLPXJPAtTK8FTqj9HM$DqsstvoSAETl9YhnsXbf43WeaUwJC6JhViIvuPoig78'
    ## Old plain text string (Will generate warnings in favor of Argon2)
    # ADMIN_TOKEN=Vy2VyYTTsKPv8W5aEOWUbB/Bt3DEKePbHmI4m9VcemUMS2rEviDowNAFqYi1xjmp
{{- include "checkAndPrintEnvVarSingleQuoted" (dict "Values" .Values "varName" "ADMIN_TOKEN") }}

    ## Enable this to bypass the admin panel security. This option is only
    ## meant to be used with the use of a separate auth layer in front
    # DISABLE_ADMIN_TOKEN=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DISABLE_ADMIN_TOKEN") }}

    ## Number of seconds, on average, between admin login requests from the same IP address before rate limiting kicks in.
    # ADMIN_RATELIMIT_SECONDS=300
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ADMIN_RATELIMIT_SECONDS") }}
    ## Allow a burst of requests of up to this size, while maintaining the average indicated by `ADMIN_RATELIMIT_SECONDS`.
    # ADMIN_RATELIMIT_MAX_BURST=3
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ADMIN_RATELIMIT_MAX_BURST") }}

    ## Set the lifetime of admin sessions to this value (in minutes).
    # ADMIN_SESSION_LIFETIME=20
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ADMIN_SESSION_LIFETIME") }}

    ## Allowed iframe ancestors (Know the risks!)
    ## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors
    ## Allows other domains to embed the web vault into an iframe, useful for embedding into secure intranets
    ## This adds the configured value to the 'Content-Security-Policy' headers 'frame-ancestors' value.
    ## Multiple values must be separated with a whitespace.
    # ALLOWED_IFRAME_ANCESTORS=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ALLOWED_IFRAME_ANCESTORS") }}

    ## Allowed connect-src (Know the risks!)
    ## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src
    ## Allows other domains to URLs which can be loaded using script interfaces like the Forwarded email alias feature
    ## This adds the configured value to the 'Content-Security-Policy' headers 'connect-src' value.
    ## Multiple values must be separated with a whitespace. And only HTTPS values are allowed.
    ## Example: "https://my-addy-io.domain.tld https://my-simplelogin.domain.tld"
    # ALLOWED_CONNECT_SRC=""
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "ALLOWED_CONNECT_SRC") }}

    ## Number of seconds, on average, between login requests from the same IP address before rate limiting kicks in.
    # LOGIN_RATELIMIT_SECONDS=60
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "LOGIN_RATELIMIT_SECONDS") }}
    ## Allow a burst of requests of up to this size, while maintaining the average indicated by `LOGIN_RATELIMIT_SECONDS`.
    ## Note that this applies to both the login and the 2FA, so it's recommended to allow a burst size of at least 2.
    # LOGIN_RATELIMIT_MAX_BURST=10
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "LOGIN_RATELIMIT_MAX_BURST") }}

    ## BETA FEATURE: Groups
    ## Controls whether group support is enabled for organizations
    ## This setting applies to organizations.
    ## Disabled by default because this is a beta feature, it contains known issues!
    ## KNOW WHAT YOU ARE DOING!
    # ORG_GROUPS_ENABLED=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ORG_GROUPS_ENABLED") }}

    ## Increase secure note size limit (Know the risks!)
    ## Sets the secure note size limit to 100_000 instead of the default 10_000.
    ## WARNING: This could cause issues with clients. Also exports will not work on Bitwarden servers!
    ## KNOW WHAT YOU ARE DOING!
    # INCREASE_NOTE_SIZE_LIMIT=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "INCREASE_NOTE_SIZE_LIMIT") }}

    ## Enforce Single Org with Reset Password Policy
    ## Enforce that the Single Org policy is enabled before setting the Reset Password policy
    ## Bitwarden enforces this by default. In Vaultwarden we encouraged to use multiple organizations because groups were not available.
    ## Setting this to true will enforce the Single Org Policy to be enabled before you can enable the Reset Password policy.
    # ENFORCE_SINGLE_ORG_WITH_RESET_PW_POLICY=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ENFORCE_SINGLE_ORG_WITH_RESET_PW_POLICY") }}

    ########################
    ### MFA/2FA settings ###
    ########################

    ## Yubico (Yubikey) Settings
    ## Set your Client ID and Secret Key for Yubikey OTP
    ## You can generate it here: https://upgrade.yubico.com/getapikey/
    ## You can optionally specify a custom OTP server
    # YUBICO_CLIENT_ID=11111
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "YUBICO_CLIENT_ID") }}
    # YUBICO_SECRET_KEY=AAAAAAAAAAAAAAAAAAAAAAAA
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "YUBICO_SECRET_KEY") }}
    # YUBICO_SERVER=http://yourdomain.com/wsapi/2.0/verify
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "YUBICO_SERVER") }}

    ## Duo Settings
    ## You need to configure the DUO_IKEY, DUO_SKEY, and DUO_HOST options to enable global Duo support.
    ## Otherwise users will need to configure it themselves.
    ## Create an account and protect an application as mentioned in this link (only the first step, not the rest):
    ## https://help.bitwarden.com/article/setup-two-step-login-duo/#create-a-duo-security-account
    ## Then set the following options, based on the values obtained from the last step:
    # DUO_IKEY=<Client ID>
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DUO_IKEY") }}
    # DUO_SKEY=<Client Secret>
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DUO_SKEY") }}
    # DUO_HOST=<API Hostname>
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DUO_HOST") }}
    ## After that, you should be able to follow the rest of the guide linked above,
    ## ignoring the fields that ask for the values that you already configured beforehand.
    ##
    ## If you want to attempt to use Duo's 'Traditional Prompt' (deprecated, iframe based) set DUO_USE_IFRAME to 'true'.
    ## Duo no longer supports this, but it still works for some integrations.
    ## If you aren't sure, leave this alone.
    # DUO_USE_IFRAME=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DUO_USE_IFRAME") }}

    ## Email 2FA settings
    ## Email token size
    ## Number of digits in an email 2FA token (min: 6, max: 255).
    ## Note that the Bitwarden clients are hardcoded to mention 6 digit codes regardless of this setting!
    # EMAIL_TOKEN_SIZE=6
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_TOKEN_SIZE") }}
    ##
    ## Token expiration time
    ## Maximum time in seconds a token is valid. The time the user has to open email client and copy token.
    # EMAIL_EXPIRATION_TIME=600
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_EXPIRATION_TIME") }}
    ##
    ## Maximum attempts before an email token is reset and a new email will need to be sent.
    # EMAIL_ATTEMPTS_LIMIT=3
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_ATTEMPTS_LIMIT") }}
    ##
    ## Setup email 2FA regardless of any organization policy
    # EMAIL_2FA_ENFORCE_ON_VERIFIED_INVITE=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_2FA_ENFORCE_ON_VERIFIED_INVITE") }}
    ## Automatically setup email 2FA as fallback provider when needed
    # EMAIL_2FA_AUTO_FALLBACK=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "EMAIL_2FA_AUTO_FALLBACK") }}

    ## Other MFA/2FA settings
    ## Disable 2FA remember
    ## Enabling this would force the users to use a second factor to login every time.
    ## Note that the checkbox would still be present, but ignored.
    # DISABLE_2FA_REMEMBER=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "DISABLE_2FA_REMEMBER") }}
    ##
    ## Authenticator Settings
    ## Disable authenticator time drifted codes to be valid.
    ## TOTP codes of the previous and next 30 seconds will be invalid
    ##
    ## According to the RFC6238 (https://tools.ietf.org/html/rfc6238),
    ## we allow by default the TOTP code which was valid one step back and one in the future.
    ## This can however allow attackers to be a bit more lucky with there attempts because there are 3 valid codes.
    ## You can disable this, so that only the current TOTP Code is allowed.
    ## Keep in mind that when a sever drifts out of time, valid codes could be marked as invalid.
    ## In any case, if a code has been used it can not be used again, also codes which predates it will be invalid.
    # AUTHENTICATOR_DISABLE_TIME_DRIFT=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "AUTHENTICATOR_DISABLE_TIME_DRIFT") }}

    ###########################
    ### SMTP Email settings ###
    ###########################

    ## Mail specific settings, set SMTP_FROM and either SMTP_HOST or USE_SENDMAIL to enable the mail service.
    ## To make sure the email links are pointing to the correct host, set the DOMAIN variable.
    ## Note: if SMTP_USERNAME is specified, SMTP_PASSWORD is mandatory
    # SMTP_HOST=smtp.domain.tld
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_HOST") }}
    # SMTP_FROM=vaultwarden@domain.tld
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SMTP_FROM") }}
    # SMTP_FROM_NAME=Vaultwarden
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SMTP_FROM_NAME") }}
    # SMTP_USERNAME=username
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SMTP_USERNAME") }}
    # SMTP_PASSWORD=password
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SMTP_PASSWORD") }}
    # SMTP_TIMEOUT=15
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_TIMEOUT") }}

    ## Choose the type of secure connection for SMTP. The default is "starttls".
    ## The available options are:
    ## - "starttls": The default port is 587.
    ## - "force_tls": The default port is 465.
    ## - "off": The default port is 25.
    ## Ports 587 (submission) and 25 (smtp) are standard without encryption and with encryption via STARTTLS (Explicit TLS). Port 465 (submissions) is used for encrypted submission (Implicit TLS).
    # SMTP_SECURITY=starttls
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_SECURITY") }}
    # SMTP_PORT=587
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_PORT") }}

    # Whether to send mail via the `sendmail` command
    # USE_SENDMAIL=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "USE_SENDMAIL") }}
    # Which sendmail command to use. The one found in the $PATH is used if not specified.
    # SENDMAIL_COMMAND="/path/to/sendmail"
{{- include "checkAndPrintEnvVarQuoted" (dict "Values" .Values "varName" "SENDMAIL_COMMAND") }}

    ## Defaults for SSL is "Plain" and "Login" and nothing for Non-SSL connections.
    ## Possible values: ["Plain", "Login", "Xoauth2"].
    ## Multiple options need to be separated by a comma ','.
    # SMTP_AUTH_MECHANISM=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_AUTH_MECHANISM") }}

    ## Server name sent during the SMTP HELO
    ## By default this value should be is on the machine's hostname,
    ## but might need to be changed in case it trips some anti-spam filters
    # HELO_NAME=
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "HELO_NAME") }}

    ## Embed images as email attachments
    # SMTP_EMBED_IMAGES=true
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_EMBED_IMAGES") }}

    ## SMTP debugging
    ## When set to true this will output very detailed SMTP messages.
    ## WARNING: This could contain sensitive information like passwords and usernames! Only enable this during troubleshooting!
    # SMTP_DEBUG=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_DEBUG") }}

    ## Accept Invalid Certificates
    ## DANGEROUS: This option introduces significant vulnerabilities to man-in-the-middle attacks!
    ## Only use this as a last resort if you are not able to use a valid certificate.
    ## If the Certificate is valid but the hostname doesn't match, please use SMTP_ACCEPT_INVALID_HOSTNAMES instead.
    # SMTP_ACCEPT_INVALID_CERTS=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_ACCEPT_INVALID_CERTS") }}

    ## Accept Invalid Hostnames
    ## DANGEROUS: This option introduces significant vulnerabilities to man-in-the-middle attacks!
    ## Only use this as a last resort if you are not able to use a valid certificate.
    # SMTP_ACCEPT_INVALID_HOSTNAMES=false
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "SMTP_ACCEPT_INVALID_HOSTNAMES") }}

    #######################
    ### Rocket settings ###
    #######################

    ## Rocket specific settings
    ## See https://rocket.rs/v0.5/guide/configuration/ for more details.
    # ROCKET_ADDRESS=0.0.0.0
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ROCKET_ADDRESS") }}
    ## The default port is 8000, unless running in a Docker container, in which case it is 80.
    # ROCKET_PORT=8000
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ROCKET_PORT") }}
    # ROCKET_TLS={certs="/path/to/certs.pem",key="/path/to/key.pem"}
{{- include "checkAndPrintEnvVar" (dict "Values" .Values "varName" "ROCKET_TLS") }}